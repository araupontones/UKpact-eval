uiMap <- function(id){
  
  tagList(
    
    leafletOutput(NS(id,'map'))
    
  )
}


#server -----------------------------------------------------------------------

serverMap <-  function(id, data_map, world, palette_map) {
  moduleServer(id, function(input, output, session) {
    
    
    
    pallete_map <- eventReactive(data_map(),{
      
      colorNumeric(
        rev(blue_palette),
        domain = data_map()$projects)
      
    })
    
    
    #map static
    output$map <- leaflet::renderLeaflet({
      
      leaflet(world) %>%
        addPolygons(fillColor = "gray",
                    color = "white",
                    weight = 1) 
    })
    
    
    #map reactive 
    observe({
      proxy <- leafletProxy("map", data = world)
      
      proxy %>%
        clearControls() %>%
        clearGroup("A") %>%
        addPolygons(data = data_map(),
                    color = "black",
                    fillColor =  ~ pallete_map()(projects),
                    fillOpacity = 1,
                    group = "A",
                    label = ~ Country,
                    layerId = ~ Country,
                    weight = 1)
      
      # addLegend(pal = pallete_map(),
      #           values = ~ rev(data_map()$projects),
      #           title = "Projects",
      #           labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))
      #           )
    })
    
    
    
    
    
    
    Country <- eventReactive(input$map_shape_click,{
      
      req(!is.null(input$map_shape_click$id))
      input$map_shape_click$id 
      
    })
    
    Country
    
    
    
  })}